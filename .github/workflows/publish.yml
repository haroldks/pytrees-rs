name: Build and publish Python package

#on:
#  push:
#    tags:
#      - 'v*'

on:
  push:
    branches: [ "actions" ]


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:

          CIBW_ARCHS_MACOS: 'universal2'
          CIBW_ARCHS_LINUX: 'x86_64'

          CIBW_BUILD: 'cp3{9,10}-*'
          CIBW_BEFORE_BUILD_LINUX: >
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&
            echo "Enabling rustup" &&
            source "$HOME/.cargo/env" &&
            cargo --version
          CIBW_BEFORE_BUILD_MACOS: >
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y &&
            echo "Enabling rustup" &&
            source "$HOME/.cargo/env" &&
            cargo --version &&
            rustup target add aarch64-apple-darwin

          CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
          CIBW_SKIP: "cp36-* cp37-* pp* *-win32 *-musllinux*"
        with:
          package-dir: ./pytrees-rs

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: cd pyblossom-rs && pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: pytrees-rs/dist/*.tar.gz


  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    name: Upload to PyPI
    environment:
      name: testpypi
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.6
        with:
          verify-metadata: false
          skip-existing: true
          repository_url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.TEST_PYPI }}
